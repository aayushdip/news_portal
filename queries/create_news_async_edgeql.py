# AUTOGENERATED FROM 'queries/create_news.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations

import dataclasses
import datetime
import uuid

import edgedb


class NoPydanticValidation:
    @classmethod
    def __get_validators__(cls):
        from pydantic.dataclasses import dataclass as pydantic_dataclass

        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class CreateNewsResult(NoPydanticValidation):
    id: uuid.UUID
    author: CreateNewsResultAuthor
    news_content: str


@dataclasses.dataclass
class CreateNewsResultAuthor(NoPydanticValidation):
    id: uuid.UUID


async def create_news(
    executor: edgedb.AsyncIOExecutor,
    *,
    title: str,
    date_published: datetime.date,
    author: uuid.UUID,
    section: str,
    country: str,
    news_content: str,
) -> CreateNewsResult:
    return await executor.query_single(
        """\
        select (
        insert News {
            title := <str>$title,
            date_published := <cal::local_date>$date_published,
            author:= (
                select User
                filter .id = <uuid>$author
            ),
            section := <str>$section,
            country := <str>$country,
            news_content := <str>$news_content
        }
        ) {id, author, news_content};\
        """,
        title=title,
        date_published=date_published,
        author=author,
        section=section,
        country=country,
        news_content=news_content,
    )
